import { EmbedBuilder } from 'discord.js';
import { PinkColor } from '@utils/embedEvents';
import { MusicTime } from '@utils/MusicTimeUtils';
import {
    Player,
    SearchResult,
    UnresolvedSearchResult,
} from 'lavalink-client/dist/types';
import type { InteractionEmbed } from 'src/types';

/**
 * **musicPlayEmbed ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏¥‡∏°‡πÄ‡∏ö‡πá‡∏ï‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞**
 *
 * @param player
 * @param search
 * @param interaction
 * @param client
 * @returns
 */
export default function musicPlayEmbed(
    embedData: InteractionEmbed,
    player: Player,
    search: SearchResult | UnresolvedSearchResult
): EmbedBuilder {
    const { interaction, client } = embedData;

    return new EmbedBuilder()
        .setAuthor({
            name: interaction.user.displayName,
            iconURL: interaction.user.displayAvatarURL() ?? '',
        })
        .setDescription(
            search.loadType === 'playlist'
                ? `‡πÄ‡∏û‡∏•‡∏¢‡πå‡∏•‡∏¥‡∏™‡∏ï‡πå‡πÄ‡∏û‡∏•‡∏á: ${search.playlist?.title}\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ó‡∏£‡πá‡∏Å: ${search.tracks.length}`
                : search.loadType === 'track'
                ? `‡πÄ‡∏û‡∏•‡∏á: [${search.tracks[0].info.title}](<${search.tracks[0].info.uri}>)\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏û‡∏•‡∏á: ${player.queue.tracks.length}`
                : search.loadType === 'search'
                ? `‡πÄ‡∏û‡∏•‡∏á: [${search.tracks[0].info.title}](<${search.tracks[0].info.uri}>)\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏û‡∏•‡∏á: ${player.queue.tracks.length}`
                : search.loadType === 'error'
                ? '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏û‡∏•‡∏á ‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏∞‡∏Ñ‡∏∞'
                : '‡πÅ‡∏¢‡πà‡∏à‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡πÄ‡∏•‡∏¢..'
        )
        .setColor(PinkColor)
        .addFields(
            {
                name: '`üé∂` **‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î**',
                value: `**${player.queue.tracks.length}**`,
                inline: false,
            },
            {
                name: '`üé∂` **‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏û‡∏•‡∏á**',
                value: `**${search.tracks[0].info.author}**`,
                inline: true,
            },
            {
                name: '`üé∂` **‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤**',
                value: `**${MusicTime(
                    search.tracks[0].info.duration as number
                )}**`,
                inline: true,
            },
            {
                name: '`üé∂` **‡πÄ‡∏•‡πà‡∏ô‡∏ö‡∏ô‡πÇ‡∏´‡∏ô‡∏î**',
                value: `**${player.node.id}**`,
                inline: true,
            }
        )
        .setThumbnail(search.tracks[0].info.artworkUrl ?? '')
        .setFooter({
            text: client.user?.displayName as string,
            iconURL: client.user?.displayAvatarURL() ?? '',
        })
        .setTimestamp();
}
